// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "ctrl+l",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "undo_expand_region",
    "when": "editorTextFocus && editorHasSelection"
  },
  // { "key": "cmd+]", "command": "workbench.action.nextEditor" },
  // { "key": "cmd+[", "command": "workbench.action.previousEditor" },
  { "key": "cmd+l", "command": "workbench.action.nextEditor" },
  { "key": "cmd+h", "command": "workbench.action.previousEditor" },
  {
    "key": "cmd+]",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.nextSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.previousSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "cmd+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "!editorTextFocus"
  },
  {
    "key": "cmd+shift+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.quickOpenTerm"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+shift+j",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "activePanel != 'workbench.view.search'"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+cmd+j",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "cmd+g p",
    "command": "git.push"
  },
  {
    "key": "cmd+g u",
    "command": "git.pull"
  },
  {
    "key": "cmd+g b",
    "command": "git.checkout"
  },
  {
    "key": "cmd+g s",
    "command": "git.stash"
  },
  {
    "key": "cmd+g shift+s",
    "command": "git.stashPop"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+k cmd+e",
    "command": "workbench.files.action.collapseExplorerFolders"
  },
  {
    "key": "cmd+g c",
    "command": "git.commit"
  },
  {
    "comment": "This allows me to open the file on enter instead which makes more sense to me.",
    "key": "right",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "shift+cmd+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+left",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+right",
    "command": "-cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+cmd+left",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+left",
    "command": "-cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+s",
    "command": "angular-split.execute"
  },
  {
    "key": "cmd+u",
    "command": "extension.switchTS"
  },
  {
    "key": "cmd+i",
    "command": "extension.switchTemplate"
  },
  {
    "key": "cmd+o",
    "command": "extension.switchStyle"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "shift+cmd+l",
    "command": "workbench.action.showNextWindowTab"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.showPreviousWindowTab"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "shift+f9",
    "command": "-editor.debug.action.toggleInlineBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+f4",
    "command": "-extension.node-debug.pickLoadedScript",
    "when": "debugType == 'node2'"
  },
  {
    "key": "f6",
    "command": "-workbench.action.debug.pause",
    "when": "debugState == 'running'"
  },
  {
    "key": "cmd+f4",
    "command": "-extension.node-debug.pickLoadedScript",
    "when": "debugType == 'node'"
  },
  {
    "key": "shift+cmd+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  {
    "key": "f11",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node'"
  },
  {
    "key": "f10",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node'"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "!inDebugMode"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "inDebugMode"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug"
  },
  {
    "key": "alt+enter",
    "command": "-debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "cmd+enter",
    "command": "-debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "cmd+backspace",
    "command": "-debug.removeBreakpoint",
    "when": "breakpointsFocused && !breakpointSelected"
  },
  {
    "key": "cmd+backspace",
    "command": "-debug.removeWatchExpression",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  {
    "key": "enter",
    "command": "-debug.renameWatchExpression",
    "when": "watchExpressionsFocused"
  },
  {
    "key": "enter",
    "command": "-debug.setVariable",
    "when": "variablesFocused"
  },
  {
    "key": "space",
    "command": "-debug.toggleBreakpoint",
    "when": "breakpointsFocused && !inputFocus"
  },
  {
    "key": "cmd+f",
    "command": "-actions.find"
  },
  {
    "key": "cmd+f",
    "command": "actions.find"
  },
  {
    "key": "shift+cmd+f j",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "f4",
    "command": "-search.action.focusNextSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "shift+cmd+f k",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "shift+f4",
    "command": "-search.action.focusPreviousSearchResult",
    "when": "hasSearchResult"
  },
  // {
  //   "key": "shift+cmd+f d",
  //   "command": "search.action.clearSearchResults"
  // },
  {
    "key": "shift+cmd+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run"
  }
]
